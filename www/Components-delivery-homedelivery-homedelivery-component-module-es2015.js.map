{"version":3,"sources":["./src/app/Components/delivery/homedelivery/homedelivery.component.html","./src/app/Components/delivery/homedelivery/homedelivery.component-routing.module.ts","./src/app/Components/delivery/homedelivery/homedelivery.component.module.ts","./src/app/Components/delivery/homedelivery/homedelivery.component.scss","./src/app/Components/delivery/homedelivery/homedelivery.component.ts"],"names":[],"mappings":"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","file":"Components-delivery-homedelivery-homedelivery-component-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Home Delivery</ion-title>\\n  </ion-toolbar>\\n\\n</ion-header>\\n<ion-content fullscreen>\\n  <form [formGroup]=\\\"HomeDeliveryForm\\\" padding-right>\\n    <!-- firstname -->\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">First Name</ion-label>\\n      <ion-input type=\\\"text\\\" formControlName=\\\"firstname\\\"\\n          [ngClass]=\\\"{'has-error':HomeDeliveryForm.get('firstname').errors && (HomeDeliveryForm.get('firstname').touched || HomeDeliveryForm.get('firstname').dirty)}\\\">\\n      </ion-input>\\n      <small\\n          *ngIf=\\\"HomeDeliveryForm.get('firstname').errors && (HomeDeliveryForm.get('firstname').touched || HomeDeliveryForm.get('firstname').dirty)\\\"\\n          class=\\\"testforvalid\\\">\\n          <small *ngIf=\\\"HomeDeliveryForm.get('firstname').errors.required\\\">\\n              firstname is required\\n          </small>\\n          \\n      </small>\\n  </ion-item>\\n\\n  <!-- Lastname -->\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Last name</ion-label>\\n      <ion-input type=\\\"text\\\" formControlName=\\\"lastname\\\"\\n          [ngClass]=\\\"{'has-error':HomeDeliveryForm.get('lastname').errors && (HomeDeliveryForm.get('lastname').touched || HomeDeliveryForm.get('lastname').dirty)}\\\">\\n      </ion-input>\\n      <small\\n          *ngIf=\\\"HomeDeliveryForm.get('lastname').errors && (HomeDeliveryForm.get('lastname').touched || HomeDeliveryForm.get('lastname').dirty)\\\"\\n          class=\\\"testforvalid\\\">\\n          <small *ngIf=\\\"HomeDeliveryForm.get('lastname').errors.required\\\">\\n              Lastname is required\\n          </small>\\n      </small>\\n    </ion-item>\\n\\n    <!-- Phone no -->\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Phone</ion-label>\\n      <ion-input type=\\\"text\\\" formControlName=\\\"phone\\\"\\n          [ngClass]=\\\"{'has-error':HomeDeliveryForm.get('phone').errors && (HomeDeliveryForm.get('phone').touched || HomeDeliveryForm.get('phone').dirty)}\\\">\\n      </ion-input>\\n      <small\\n          *ngIf=\\\"HomeDeliveryForm.get('phone').errors && (HomeDeliveryForm.get('phone').touched || HomeDeliveryForm.get('phone').dirty)\\\"\\n          class=\\\"testforvalid\\\">\\n          <small *ngIf=\\\"HomeDeliveryForm.get('phone').errors.required\\\">\\n              Phon no is required\\n          </small>\\n      </small>\\n    </ion-item>\\n\\n    <!-- Email -->\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Email</ion-label>\\n      <ion-input type=\\\"text\\\" formControlName=\\\"email\\\"\\n      [ngClass]=\\\"{'has-error':HomeDeliveryForm.get('email').errors && (HomeDeliveryForm.get('email').touched || HomeDeliveryForm.get('email').dirty)}\\\">\\n  </ion-input>\\n  <small\\n      *ngIf=\\\"HomeDeliveryForm.get('email').errors && (HomeDeliveryForm.get('email').touched || HomeDeliveryForm.get('email').dirty)\\\"\\n      class=\\\"testforvalid\\\">\\n      <small *ngIf=\\\"HomeDeliveryForm.get('email').errors.required\\\">\\n         Email is required\\n      </small>\\n      <small *ngIf=\\\"HomeDeliveryForm.get('email').errors.email\\\">\\n      Email Should be a valid email\\n     </small>\\n  </small>\\n    </ion-item>\\n\\n    <!-- Address -->\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Address</ion-label>\\n      <ion-input type=\\\"text\\\" formControlName=\\\"address\\\"\\n      [ngClass]=\\\"{'has-error':HomeDeliveryForm.get('address').errors && (HomeDeliveryForm.get('address').touched || HomeDeliveryForm.get('address').dirty)}\\\">\\n  </ion-input>\\n  <small\\n      *ngIf=\\\"HomeDeliveryForm.get('address').errors && (HomeDeliveryForm.get('address').touched || HomeDeliveryForm.get('address').dirty)\\\"\\n      class=\\\"testforvalid\\\">\\n      <small *ngIf=\\\"HomeDeliveryForm.get('address').errors.required\\\">\\n          Address  is required\\n      </small>\\n  </small>\\n    </ion-item>\\n\\n    <!-- ZipCode -->\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Zip</ion-label>\\n      <ion-input type=\\\"text\\\" formControlName=\\\"zip\\\"\\n      [ngClass]=\\\"{'has-error':HomeDeliveryForm.get('zip').errors && (HomeDeliveryForm.get('zip').touched || HomeDeliveryForm.get('zip').dirty)}\\\">\\n  </ion-input>\\n  <small\\n      *ngIf=\\\"HomeDeliveryForm.get('zip').errors && (HomeDeliveryForm.get('zip').touched || HomeDeliveryForm.get('zip').dirty)\\\"\\n      class=\\\"testforvalid\\\">\\n      <small *ngIf=\\\"HomeDeliveryForm.get('zip').errors.required\\\">\\n          Zip code is required\\n      </small>\\n  </small>\\n    </ion-item>\\n\\n    <!-- CityName -->\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">City</ion-label>\\n      <ion-input type=\\\"text\\\" formControlName=\\\"city\\\"\\n      [ngClass]=\\\"{'has-error':HomeDeliveryForm.get('city').errors && (HomeDeliveryForm.get('city').touched || HomeDeliveryForm.get('city').dirty)}\\\">\\n  </ion-input>\\n  <small\\n      *ngIf=\\\"HomeDeliveryForm.get('city').errors && (HomeDeliveryForm.get('city').touched || HomeDeliveryForm.get('city').dirty)\\\"\\n      class=\\\"testforvalid\\\">\\n      <small *ngIf=\\\"HomeDeliveryForm.get('city').errors.required\\\">\\n         City is required\\n      </small>\\n  </small>\\n    </ion-item>\\n\\n    <!-- CountryName -->\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Country</ion-label>\\n      <ion-input type=\\\"text\\\" formControlName=\\\"country\\\"\\n      [ngClass]=\\\"{'has-error':HomeDeliveryForm.get('country').errors && (HomeDeliveryForm.get('country').touched || HomeDeliveryForm.get('country').dirty)}\\\">\\n  </ion-input>\\n  \\n    </ion-item>\\n    <small\\n    *ngIf=\\\"HomeDeliveryForm.get('country').errors && (HomeDeliveryForm.get('country').touched || HomeDeliveryForm.get('country').dirty)\\\"\\n    class=\\\"testforvalid\\\">\\n    <small *ngIf=\\\"HomeDeliveryForm.get('country').errors.required\\\">\\n        Country  is required\\n    </small>\\n</small>\\n  </form>\\n</ion-content>\\n<ion-footer>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"end\\\" (click)=\\\"onSubmit(HomeDeliveryForm.value)\\\">\\n      <ion-button [disabled]=\\\"!HomeDeliveryForm.valid\\\">\\n        Submit\\n        <ion-icon name=\\\"paper-plane\\\" slot=\\\"end\\\">\\n        </ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-footer>\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomedeliveryComponent } from './homedelivery.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: HomedeliveryComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class HomeDeliveryRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { HomeDeliveryRoutingModule } from './homedelivery.component-routing.module';\r\nimport { HomedeliveryComponent } from './homedelivery.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        IonicModule,\r\n        HomeDeliveryRoutingModule,\r\n        ReactiveFormsModule\r\n    ],\r\n    declarations: [HomedeliveryComponent],\r\n    exports: [],\r\n})\r\nexport class HomeDeliveryModule { }\r\n","export default \".testforvalid {\\n  color: red;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvQ29tcG9uZW50cy9kZWxpdmVyeS9ob21lZGVsaXZlcnkvQzpcXFVzZXJzXFxocFxcRGVza3RvcFxcSW9uaWMgUHJvamVjdHNcXFJlc3RhdXJhbnRBcHAvc3JjXFxhcHBcXENvbXBvbmVudHNcXGRlbGl2ZXJ5XFxob21lZGVsaXZlcnlcXGhvbWVkZWxpdmVyeS5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvQ29tcG9uZW50cy9kZWxpdmVyeS9ob21lZGVsaXZlcnkvaG9tZWRlbGl2ZXJ5LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsVUFBQTtBQ0NGIiwiZmlsZSI6InNyYy9hcHAvQ29tcG9uZW50cy9kZWxpdmVyeS9ob21lZGVsaXZlcnkvaG9tZWRlbGl2ZXJ5LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnRlc3Rmb3J2YWxpZHtcclxuICBjb2xvcjogcmVkO1xyXG59IiwiLnRlc3Rmb3J2YWxpZCB7XG4gIGNvbG9yOiByZWQ7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ToastController, NavController } from '@ionic/angular';\ndeclare var Razorpay: any;\n\n@Component({\n  selector: 'app-homedelivery',\n  templateUrl: './homedelivery.component.html',\n  styleUrls: ['./homedelivery.component.scss'],\n})\nexport class HomedeliveryComponent implements OnInit {\n  HomeDeliveryForm: FormGroup;\n  constructor(private fb: FormBuilder, private toastController: ToastController, private navCtrl: NavController) { }\n\n  ngOnInit() {\n    this.HomeDeliveryForm = this.fb.group({\n      firstname: ['Satish', Validators.required],\n      lastname: ['Gupta', Validators.required],\n      phone: ['9898031481', Validators.required],\n      email: ['sg95144@gmail.com', [Validators.required, Validators.email]],\n      address: ['', Validators.required],\n      zip: ['380026', Validators.required],\n      city: ['Ahmedabad', Validators.required],\n      country: ['Gujarat', Validators.required],\n    })\n  }\n  async onSubmit(data) {\n    localStorage.setItem('order', JSON.stringify(data));\n    const options = {\n      key: 'rzp_test_7uz0fpp603h0XN',\n      amount: localStorage.getItem(\"totalprice\") + \"00\",\n      name: 'Merchant Name',\n      description: 'Purchase Description',\n      prefile: {\n        name: data.firstname + data.lastname,\n        email: data.email\n      },\n      notes: {\n        address: data.address\n      },\n      theme: {\n        color: 'green'\n      },\n      handler: this.paymentResponseHander.bind(this)\n    };\n\n    const rzp = new Razorpay(options);\n    console.log(rzp)\n    rzp.open();\n    \n    const toast = await this.toastController.create({\n      color: 'light',\n      duration: 2000,\n      message: 'You Ordered Successfull!!',\n    });\n    await toast.present();\n    this.navCtrl.navigateForward('/home');\n  }\n  paymentResponseHander(response) {\n    console.log(response)\n   console.log(response.razorpay_payment_id);\n   }\n}\n"],"sourceRoot":"webpack:///"}