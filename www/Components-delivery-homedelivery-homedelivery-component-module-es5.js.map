{"version":3,"sources":["src/app/Components/delivery/homedelivery/homedelivery.component.html","src/app/Components/delivery/homedelivery/homedelivery.component-routing.module.ts","src/app/Components/delivery/homedelivery/homedelivery.component.module.ts","src/app/Components/delivery/homedelivery/homedelivery.component.scss","src/app/Components/delivery/homedelivery/homedelivery.component.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Home Delivery</ion-title>\\n  </ion-toolbar>\\n\\n</ion-header>\\n<ion-content fullscreen>\\n  <form [formGroup]=\\\"HomeDeliveryForm\\\" padding-right>\\n    <!-- firstname -->\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">First Name</ion-label>\\n      <ion-input type=\\\"text\\\" formControlName=\\\"firstname\\\"\\n          [ngClass]=\\\"{'has-error':HomeDeliveryForm.get('firstname').errors && (HomeDeliveryForm.get('firstname').touched || HomeDeliveryForm.get('firstname').dirty)}\\\">\\n      </ion-input>\\n      <small\\n          *ngIf=\\\"HomeDeliveryForm.get('firstname').errors && (HomeDeliveryForm.get('firstname').touched || HomeDeliveryForm.get('firstname').dirty)\\\"\\n          class=\\\"testforvalid\\\">\\n          <small *ngIf=\\\"HomeDeliveryForm.get('firstname').errors.required\\\">\\n              firstname is required\\n          </small>\\n          \\n      </small>\\n  </ion-item>\\n\\n  <!-- Lastname -->\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Last name</ion-label>\\n      <ion-input type=\\\"text\\\" formControlName=\\\"lastname\\\"\\n          [ngClass]=\\\"{'has-error':HomeDeliveryForm.get('lastname').errors && (HomeDeliveryForm.get('lastname').touched || HomeDeliveryForm.get('lastname').dirty)}\\\">\\n      </ion-input>\\n      <small\\n          *ngIf=\\\"HomeDeliveryForm.get('lastname').errors && (HomeDeliveryForm.get('lastname').touched || HomeDeliveryForm.get('lastname').dirty)\\\"\\n          class=\\\"testforvalid\\\">\\n          <small *ngIf=\\\"HomeDeliveryForm.get('lastname').errors.required\\\">\\n              Lastname is required\\n          </small>\\n      </small>\\n    </ion-item>\\n\\n    <!-- Phone no -->\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Phone</ion-label>\\n      <ion-input type=\\\"text\\\" formControlName=\\\"phone\\\"\\n          [ngClass]=\\\"{'has-error':HomeDeliveryForm.get('phone').errors && (HomeDeliveryForm.get('phone').touched || HomeDeliveryForm.get('phone').dirty)}\\\">\\n      </ion-input>\\n      <small\\n          *ngIf=\\\"HomeDeliveryForm.get('phone').errors && (HomeDeliveryForm.get('phone').touched || HomeDeliveryForm.get('phone').dirty)\\\"\\n          class=\\\"testforvalid\\\">\\n          <small *ngIf=\\\"HomeDeliveryForm.get('phone').errors.required\\\">\\n              Phon no is required\\n          </small>\\n      </small>\\n    </ion-item>\\n\\n    <!-- Email -->\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Email</ion-label>\\n      <ion-input type=\\\"text\\\" formControlName=\\\"email\\\"\\n      [ngClass]=\\\"{'has-error':HomeDeliveryForm.get('email').errors && (HomeDeliveryForm.get('email').touched || HomeDeliveryForm.get('email').dirty)}\\\">\\n  </ion-input>\\n  <small\\n      *ngIf=\\\"HomeDeliveryForm.get('email').errors && (HomeDeliveryForm.get('email').touched || HomeDeliveryForm.get('email').dirty)\\\"\\n      class=\\\"testforvalid\\\">\\n      <small *ngIf=\\\"HomeDeliveryForm.get('email').errors.required\\\">\\n         Email is required\\n      </small>\\n      <small *ngIf=\\\"HomeDeliveryForm.get('email').errors.email\\\">\\n      Email Should be a valid email\\n     </small>\\n  </small>\\n    </ion-item>\\n\\n    <!-- Address -->\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Address</ion-label>\\n      <ion-input type=\\\"text\\\" formControlName=\\\"address\\\"\\n      [ngClass]=\\\"{'has-error':HomeDeliveryForm.get('address').errors && (HomeDeliveryForm.get('address').touched || HomeDeliveryForm.get('address').dirty)}\\\">\\n  </ion-input>\\n  <small\\n      *ngIf=\\\"HomeDeliveryForm.get('address').errors && (HomeDeliveryForm.get('address').touched || HomeDeliveryForm.get('address').dirty)\\\"\\n      class=\\\"testforvalid\\\">\\n      <small *ngIf=\\\"HomeDeliveryForm.get('address').errors.required\\\">\\n          Address  is required\\n      </small>\\n  </small>\\n    </ion-item>\\n\\n    <!-- ZipCode -->\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Zip</ion-label>\\n      <ion-input type=\\\"text\\\" formControlName=\\\"zip\\\"\\n      [ngClass]=\\\"{'has-error':HomeDeliveryForm.get('zip').errors && (HomeDeliveryForm.get('zip').touched || HomeDeliveryForm.get('zip').dirty)}\\\">\\n  </ion-input>\\n  <small\\n      *ngIf=\\\"HomeDeliveryForm.get('zip').errors && (HomeDeliveryForm.get('zip').touched || HomeDeliveryForm.get('zip').dirty)\\\"\\n      class=\\\"testforvalid\\\">\\n      <small *ngIf=\\\"HomeDeliveryForm.get('zip').errors.required\\\">\\n          Zip code is required\\n      </small>\\n  </small>\\n    </ion-item>\\n\\n    <!-- CityName -->\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">City</ion-label>\\n      <ion-input type=\\\"text\\\" formControlName=\\\"city\\\"\\n      [ngClass]=\\\"{'has-error':HomeDeliveryForm.get('city').errors && (HomeDeliveryForm.get('city').touched || HomeDeliveryForm.get('city').dirty)}\\\">\\n  </ion-input>\\n  <small\\n      *ngIf=\\\"HomeDeliveryForm.get('city').errors && (HomeDeliveryForm.get('city').touched || HomeDeliveryForm.get('city').dirty)\\\"\\n      class=\\\"testforvalid\\\">\\n      <small *ngIf=\\\"HomeDeliveryForm.get('city').errors.required\\\">\\n         City is required\\n      </small>\\n  </small>\\n    </ion-item>\\n\\n    <!-- CountryName -->\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Country</ion-label>\\n      <ion-input type=\\\"text\\\" formControlName=\\\"country\\\"\\n      [ngClass]=\\\"{'has-error':HomeDeliveryForm.get('country').errors && (HomeDeliveryForm.get('country').touched || HomeDeliveryForm.get('country').dirty)}\\\">\\n  </ion-input>\\n  \\n    </ion-item>\\n    <small\\n    *ngIf=\\\"HomeDeliveryForm.get('country').errors && (HomeDeliveryForm.get('country').touched || HomeDeliveryForm.get('country').dirty)\\\"\\n    class=\\\"testforvalid\\\">\\n    <small *ngIf=\\\"HomeDeliveryForm.get('country').errors.required\\\">\\n        Country  is required\\n    </small>\\n</small>\\n  </form>\\n</ion-content>\\n<ion-footer>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"end\\\" (click)=\\\"onSubmit(HomeDeliveryForm.value)\\\">\\n      <ion-button [disabled]=\\\"!HomeDeliveryForm.valid\\\">\\n        Submit\\n        <ion-icon name=\\\"paper-plane\\\" slot=\\\"end\\\">\\n        </ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-footer>\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomedeliveryComponent } from './homedelivery.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: HomedeliveryComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class HomeDeliveryRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { HomeDeliveryRoutingModule } from './homedelivery.component-routing.module';\r\nimport { HomedeliveryComponent } from './homedelivery.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        IonicModule,\r\n        HomeDeliveryRoutingModule,\r\n        ReactiveFormsModule\r\n    ],\r\n    declarations: [HomedeliveryComponent],\r\n    exports: [],\r\n})\r\nexport class HomeDeliveryModule { }\r\n","export default \".testforvalid {\\n  color: red;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvQ29tcG9uZW50cy9kZWxpdmVyeS9ob21lZGVsaXZlcnkvQzpcXFVzZXJzXFxocFxcRGVza3RvcFxcSW9uaWMgUHJvamVjdHNcXFJlc3RhdXJhbnRBcHAvc3JjXFxhcHBcXENvbXBvbmVudHNcXGRlbGl2ZXJ5XFxob21lZGVsaXZlcnlcXGhvbWVkZWxpdmVyeS5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvQ29tcG9uZW50cy9kZWxpdmVyeS9ob21lZGVsaXZlcnkvaG9tZWRlbGl2ZXJ5LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsVUFBQTtBQ0NGIiwiZmlsZSI6InNyYy9hcHAvQ29tcG9uZW50cy9kZWxpdmVyeS9ob21lZGVsaXZlcnkvaG9tZWRlbGl2ZXJ5LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnRlc3Rmb3J2YWxpZHtcclxuICBjb2xvcjogcmVkO1xyXG59IiwiLnRlc3Rmb3J2YWxpZCB7XG4gIGNvbG9yOiByZWQ7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ToastController, NavController } from '@ionic/angular';\ndeclare var Razorpay: any;\n\n@Component({\n  selector: 'app-homedelivery',\n  templateUrl: './homedelivery.component.html',\n  styleUrls: ['./homedelivery.component.scss'],\n})\nexport class HomedeliveryComponent implements OnInit {\n  HomeDeliveryForm: FormGroup;\n  constructor(private fb: FormBuilder, private toastController: ToastController, private navCtrl: NavController) { }\n\n  ngOnInit() {\n    this.HomeDeliveryForm = this.fb.group({\n      firstname: ['Satish', Validators.required],\n      lastname: ['Gupta', Validators.required],\n      phone: ['9898031481', Validators.required],\n      email: ['sg95144@gmail.com', [Validators.required, Validators.email]],\n      address: ['', Validators.required],\n      zip: ['380026', Validators.required],\n      city: ['Ahmedabad', Validators.required],\n      country: ['Gujarat', Validators.required],\n    })\n  }\n  async onSubmit(data) {\n    localStorage.setItem('order', JSON.stringify(data));\n    const options = {\n      key: 'rzp_test_7uz0fpp603h0XN',\n      amount: localStorage.getItem(\"totalprice\") + \"00\",\n      name: 'Merchant Name',\n      description: 'Purchase Description',\n      prefile: {\n        name: data.firstname + data.lastname,\n        email: data.email\n      },\n      notes: {\n        address: data.address\n      },\n      theme: {\n        color: 'green'\n      },\n      handler: this.paymentResponseHander.bind(this)\n    };\n\n    const rzp = new Razorpay(options);\n    console.log(rzp)\n    rzp.open();\n    \n    const toast = await this.toastController.create({\n      color: 'light',\n      duration: 2000,\n      message: 'You Ordered Successfull!!',\n    });\n    await toast.present();\n    this.navCtrl.navigateForward('/home');\n  }\n  paymentResponseHander(response) {\n    console.log(response)\n   console.log(response.razorpay_payment_id);\n   }\n}\n"],"sourceRoot":"webpack:///","file":"Components-delivery-homedelivery-homedelivery-component-module-es5.js"}